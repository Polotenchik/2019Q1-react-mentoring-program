// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Search /> Rendering should render the component in the search mode 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "storeState": Object {
        "mode": Object {
          "loadingData": false,
          "movie": false,
          "search": true,
        },
        "movies": Object {
          "currentMovie": null,
          "currentMovieGenre": " ",
          "recommendedList": Array [],
          "searchList": Array [],
          "sortBy": Object {
            "chosenParameter": "release date",
            "parameters": Array [
              "release date",
              "rating",
            ],
          },
        },
        "search": Object {
          "phrase": "",
          "type": "",
        },
      },
    }
  }
>
  <Component
    onSearch={[MockFunction]}
    searchMode={true}
  />
</ContextProvider>
`;

exports[`<Search /> Rendering should render the component with default props 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "storeState": Object {
        "mode": Object {
          "loadingData": false,
          "movie": false,
          "search": true,
        },
        "movies": Object {
          "currentMovie": null,
          "currentMovieGenre": " ",
          "recommendedList": Array [],
          "searchList": Array [],
          "sortBy": Object {
            "chosenParameter": "release date",
            "parameters": Array [
              "release date",
              "rating",
            ],
          },
        },
        "search": Object {
          "phrase": "",
          "type": "",
        },
      },
    }
  }
>
  <Component
    onSearch={[MockFunction]}
    searchMode={true}
  />
</ContextProvider>
`;
