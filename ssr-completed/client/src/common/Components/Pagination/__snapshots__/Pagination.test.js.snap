// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Pagination  Snapshot Pagination Common Component should render correctly with no props 1`] = `
<Pagination
  arrayOfPages={
    Array [
      1,
      2,
      3,
    ]
  }
  arrayOfPerPages={
    Array [
      10,
    ]
  }
  changePageHandler={[MockFunction]}
  changePerPageHandler={[MockFunction]}
  currentPage={1}
  moviesPerPage={10}
>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": true,
            "lastClassName": "ilcwhv",
            "rules": Array [
              "
    display: flex;
    justify-content: space-between;
    width: 80%;
    margin:20px auto;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-bxivhb ilcwhv"
      >
        <form>
          <Arrow
            left={true}
          >
            <styled.span
              left={true}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bdVaJa",
                      "isStatic": false,
                      "lastClassName": "fthdKs",
                      "rules": Array [
                        "

    .fas {

        margin-left: 20px;

        ",
                        [Function],
                        "

         ",
                        [Function],
                        "

         ",
                        [Function],
                        "

     }
",
                      ],
                    },
                    "displayName": "styled.span",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bdVaJa",
                    "target": "span",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                left={true}
              >
                <span
                  className="sc-bdVaJa ikYpUF"
                >
                  <i
                    className="fas fa-arrow-up"
                  />
                </span>
              </StyledComponent>
            </styled.span>
          </Arrow>
          <RadioButton
            filtered="item1"
            handlerChange={[MockFunction]}
            inputId="item1"
            inputName="pagination"
            inputValue={1}
            underline={true}
          >
            <styled.input
              id="item1"
              name="pagination"
              onChange={[Function]}
              type="radio"
              value={1}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bwzfXH",
                      "isStatic": true,
                      "lastClassName": "exzExq",
                      "rules": Array [
                        "
    display: none;
",
                      ],
                    },
                    "displayName": "styled.input",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bwzfXH",
                    "target": "input",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                id="item1"
                name="pagination"
                onChange={[Function]}
                type="radio"
                value={1}
              >
                <input
                  className="sc-bwzfXH exzExq"
                  id="item1"
                  name="pagination"
                  onChange={[Function]}
                  type="radio"
                  value={1}
                />
              </StyledComponent>
            </styled.input>
            <styled.label
              active={true}
              htmlFor="item1"
              underline={true}
            >
              <StyledComponent
                active={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": false,
                      "lastClassName": "eDwrks",
                      "rules": Array [
                        "
  cursor: pointer;
  margin-left: 20px;    
  border-radius: 4px;
  cursor: pointer;

   ",
                        [Function],
                        "
   
   ",
                        [Function],
                        "   
   
    ",
                        [Function],
                        " 
   
    ",
                        [Function],
                        "
   
    ",
                        [Function],
                        " 
",
                      ],
                    },
                    "displayName": "styled.label",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "label",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                htmlFor="item1"
                underline={true}
              >
                <label
                  className="sc-htpNat eDwrks"
                  htmlFor="item1"
                >
                  1
                </label>
              </StyledComponent>
            </styled.label>
          </RadioButton>
          <RadioButton
            filtered="item1"
            handlerChange={[MockFunction]}
            inputId="item2"
            inputName="pagination"
            inputValue={2}
            underline={true}
          >
            <styled.input
              id="item2"
              name="pagination"
              onChange={[Function]}
              type="radio"
              value={2}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bwzfXH",
                      "isStatic": true,
                      "lastClassName": "exzExq",
                      "rules": Array [
                        "
    display: none;
",
                      ],
                    },
                    "displayName": "styled.input",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bwzfXH",
                    "target": "input",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                id="item2"
                name="pagination"
                onChange={[Function]}
                type="radio"
                value={2}
              >
                <input
                  className="sc-bwzfXH exzExq"
                  id="item2"
                  name="pagination"
                  onChange={[Function]}
                  type="radio"
                  value={2}
                />
              </StyledComponent>
            </styled.input>
            <styled.label
              active={false}
              htmlFor="item2"
              underline={true}
            >
              <StyledComponent
                active={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": false,
                      "lastClassName": "eDwrks",
                      "rules": Array [
                        "
  cursor: pointer;
  margin-left: 20px;    
  border-radius: 4px;
  cursor: pointer;

   ",
                        [Function],
                        "
   
   ",
                        [Function],
                        "   
   
    ",
                        [Function],
                        " 
   
    ",
                        [Function],
                        "
   
    ",
                        [Function],
                        " 
",
                      ],
                    },
                    "displayName": "styled.label",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "label",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                htmlFor="item2"
                underline={true}
              >
                <label
                  className="sc-htpNat wAngO"
                  htmlFor="item2"
                >
                  2
                </label>
              </StyledComponent>
            </styled.label>
          </RadioButton>
          <RadioButton
            filtered="item1"
            handlerChange={[MockFunction]}
            inputId="item3"
            inputName="pagination"
            inputValue={3}
            underline={true}
          >
            <styled.input
              id="item3"
              name="pagination"
              onChange={[Function]}
              type="radio"
              value={3}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bwzfXH",
                      "isStatic": true,
                      "lastClassName": "exzExq",
                      "rules": Array [
                        "
    display: none;
",
                      ],
                    },
                    "displayName": "styled.input",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bwzfXH",
                    "target": "input",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                id="item3"
                name="pagination"
                onChange={[Function]}
                type="radio"
                value={3}
              >
                <input
                  className="sc-bwzfXH exzExq"
                  id="item3"
                  name="pagination"
                  onChange={[Function]}
                  type="radio"
                  value={3}
                />
              </StyledComponent>
            </styled.input>
            <styled.label
              active={false}
              htmlFor="item3"
              underline={true}
            >
              <StyledComponent
                active={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": false,
                      "lastClassName": "eDwrks",
                      "rules": Array [
                        "
  cursor: pointer;
  margin-left: 20px;    
  border-radius: 4px;
  cursor: pointer;

   ",
                        [Function],
                        "
   
   ",
                        [Function],
                        "   
   
    ",
                        [Function],
                        " 
   
    ",
                        [Function],
                        "
   
    ",
                        [Function],
                        " 
",
                      ],
                    },
                    "displayName": "styled.label",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "label",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                htmlFor="item3"
                underline={true}
              >
                <label
                  className="sc-htpNat wAngO"
                  htmlFor="item3"
                >
                  3
                </label>
              </StyledComponent>
            </styled.label>
          </RadioButton>
          <Arrow
            right={true}
          >
            <styled.span
              right={true}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bdVaJa",
                      "isStatic": false,
                      "lastClassName": "fthdKs",
                      "rules": Array [
                        "

    .fas {

        margin-left: 20px;

        ",
                        [Function],
                        "

         ",
                        [Function],
                        "

         ",
                        [Function],
                        "

     }
",
                      ],
                    },
                    "displayName": "styled.span",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bdVaJa",
                    "target": "span",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                right={true}
              >
                <span
                  className="sc-bdVaJa fthdKs"
                >
                  <i
                    className="fas fa-arrow-up"
                  />
                </span>
              </StyledComponent>
            </styled.span>
          </Arrow>
        </form>
        <form>
          <RadioButton
            filtered="perPage10"
            handlerChange={[MockFunction]}
            inputId="perPage10"
            inputName="perPageCount"
            inputValue={10}
            underline={true}
          >
            <styled.input
              id="perPage10"
              name="perPageCount"
              onChange={[Function]}
              type="radio"
              value={10}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bwzfXH",
                      "isStatic": true,
                      "lastClassName": "exzExq",
                      "rules": Array [
                        "
    display: none;
",
                      ],
                    },
                    "displayName": "styled.input",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bwzfXH",
                    "target": "input",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                id="perPage10"
                name="perPageCount"
                onChange={[Function]}
                type="radio"
                value={10}
              >
                <input
                  className="sc-bwzfXH exzExq"
                  id="perPage10"
                  name="perPageCount"
                  onChange={[Function]}
                  type="radio"
                  value={10}
                />
              </StyledComponent>
            </styled.input>
            <styled.label
              active={true}
              htmlFor="perPage10"
              underline={true}
            >
              <StyledComponent
                active={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": false,
                      "lastClassName": "eDwrks",
                      "rules": Array [
                        "
  cursor: pointer;
  margin-left: 20px;    
  border-radius: 4px;
  cursor: pointer;

   ",
                        [Function],
                        "
   
   ",
                        [Function],
                        "   
   
    ",
                        [Function],
                        " 
   
    ",
                        [Function],
                        "
   
    ",
                        [Function],
                        " 
",
                      ],
                    },
                    "displayName": "styled.label",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "label",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                htmlFor="perPage10"
                underline={true}
              >
                <label
                  className="sc-htpNat eDwrks"
                  htmlFor="perPage10"
                >
                  10
                </label>
              </StyledComponent>
            </styled.label>
          </RadioButton>
        </form>
      </div>
    </StyledComponent>
  </styled.div>
</Pagination>
`;
